1 Microservices Architecture pattern
  Monolithic Architecture pattern

2 Communication Mechanism
  Distributed Database Architecture
  Service Discovery Mechanism
  Greater Control of Deployment Methods
  
3 Clustering Solution : Kubernetes, Docker

4 Service Discovery Mechanism
    service-side discovery
    client-side discovery

5 API Gateway
  request routing, request composition, and protocol translation
  mask failures in the backend microservices by caching or returning default data
  Netflix Hystrix circuit breaker pattern

6 Inter-Process Communication
  (1) Handle Partial Failure:
      Network timeouts
      Limiting the number of outstanding requests
      Circuit breaker pattern
      Provide fallbacks
  (2) IPC Technologies
      Asynchronous, Message-Based Communiction
         one-to-one, one-to-multi
         RabbitMQ, Apache Kafka, Apache ActiveMQ, NSQ
      Synchronous, Request/Response IPC
         REST, Thrift
  (3) Message Format
      Text: XML,JSON
      Binary: Protocol Buffer, Apache Avro

7 Service Discovery
  (1) Client-Side Discovery: Netflix Eureka(RESTful Service Registry), Netflix Ribbon(Load Balancing)
      Drawback: Service Client and Registry Coupled
  (2) Server-Side Discovery: Load Balancing Router Should be HIGHLY-AVAILABLE
  (3) Service Registration Pattern
      Self-Registration Pattern PLUS Heart-Beating Keeping-alive
  (4) Third-Party Registration Pattern
      Polling Deployment Environment

8 Deployment Strategy
  Multiple Service Instances per Host pattern
  Service Instance per Host pattern: Service Instance per Virtual Machine and Service Instance per Container
    Continuous Integration server (Jenkins), Packer
